/*! catapult-design 2013-09-19 */
(function() {
    var root = this, previousUnderscore = root._, breaker = {}, ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype, push = ArrayProto.push, slice = ArrayProto.slice, concat = ArrayProto.concat, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty, nativeForEach = ArrayProto.forEach, nativeMap = ArrayProto.map, nativeReduce = ArrayProto.reduce, nativeReduceRight = ArrayProto.reduceRight, nativeFilter = ArrayProto.filter, nativeEvery = ArrayProto.every, nativeSome = ArrayProto.some, nativeIndexOf = ArrayProto.indexOf, nativeLastIndexOf = ArrayProto.lastIndexOf, nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind, _ = function(obj) {
        return obj instanceof _ ? obj : this instanceof _ ? (this._wrapped = obj, void 0) : new _(obj);
    };
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = _), 
    exports._ = _) : root._ = _, _.VERSION = "1.5.2";
    var each = _.each = _.forEach = function(obj, iterator, context) {
        if (null != obj) if (nativeForEach && obj.forEach === nativeForEach) obj.forEach(iterator, context); else if (obj.length === +obj.length) {
            for (var i = 0, length = obj.length; length > i; i++) if (iterator.call(context, obj[i], i, obj) === breaker) return;
        } else for (var keys = _.keys(obj), i = 0, length = keys.length; length > i; i++) if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;
    };
    _.map = _.collect = function(obj, iterator, context) {
        var results = [];
        return null == obj ? results : nativeMap && obj.map === nativeMap ? obj.map(iterator, context) : (each(obj, function(value, index, list) {
            results.push(iterator.call(context, value, index, list));
        }), results);
    };
    var reduceError = "Reduce of empty array with no initial value";
    _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
        var initial = arguments.length > 2;
        if (null == obj && (obj = []), nativeReduce && obj.reduce === nativeReduce) return context && (iterator = _.bind(iterator, context)), 
        initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
        if (each(obj, function(value, index, list) {
            initial ? memo = iterator.call(context, memo, value, index, list) : (memo = value, 
            initial = !0);
        }), !initial) throw new TypeError(reduceError);
        return memo;
    }, _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
        var initial = arguments.length > 2;
        if (null == obj && (obj = []), nativeReduceRight && obj.reduceRight === nativeReduceRight) return context && (iterator = _.bind(iterator, context)), 
        initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
        var length = obj.length;
        if (length !== +length) {
            var keys = _.keys(obj);
            length = keys.length;
        }
        if (each(obj, function(value, index, list) {
            index = keys ? keys[--length] : --length, initial ? memo = iterator.call(context, memo, obj[index], index, list) : (memo = obj[index], 
            initial = !0);
        }), !initial) throw new TypeError(reduceError);
        return memo;
    }, _.find = _.detect = function(obj, iterator, context) {
        var result;
        return any(obj, function(value, index, list) {
            return iterator.call(context, value, index, list) ? (result = value, !0) : void 0;
        }), result;
    }, _.filter = _.select = function(obj, iterator, context) {
        var results = [];
        return null == obj ? results : nativeFilter && obj.filter === nativeFilter ? obj.filter(iterator, context) : (each(obj, function(value, index, list) {
            iterator.call(context, value, index, list) && results.push(value);
        }), results);
    }, _.reject = function(obj, iterator, context) {
        return _.filter(obj, function(value, index, list) {
            return !iterator.call(context, value, index, list);
        }, context);
    }, _.every = _.all = function(obj, iterator, context) {
        iterator || (iterator = _.identity);
        var result = !0;
        return null == obj ? result : nativeEvery && obj.every === nativeEvery ? obj.every(iterator, context) : (each(obj, function(value, index, list) {
            return (result = result && iterator.call(context, value, index, list)) ? void 0 : breaker;
        }), !!result);
    };
    var any = _.some = _.any = function(obj, iterator, context) {
        iterator || (iterator = _.identity);
        var result = !1;
        return null == obj ? result : nativeSome && obj.some === nativeSome ? obj.some(iterator, context) : (each(obj, function(value, index, list) {
            return result || (result = iterator.call(context, value, index, list)) ? breaker : void 0;
        }), !!result);
    };
    _.contains = _.include = function(obj, target) {
        return null == obj ? !1 : nativeIndexOf && obj.indexOf === nativeIndexOf ? -1 != obj.indexOf(target) : any(obj, function(value) {
            return value === target;
        });
    }, _.invoke = function(obj, method) {
        var args = slice.call(arguments, 2), isFunc = _.isFunction(method);
        return _.map(obj, function(value) {
            return (isFunc ? method : value[method]).apply(value, args);
        });
    }, _.pluck = function(obj, key) {
        return _.map(obj, function(value) {
            return value[key];
        });
    }, _.where = function(obj, attrs, first) {
        return _.isEmpty(attrs) ? first ? void 0 : [] : _[first ? "find" : "filter"](obj, function(value) {
            for (var key in attrs) if (attrs[key] !== value[key]) return !1;
            return !0;
        });
    }, _.findWhere = function(obj, attrs) {
        return _.where(obj, attrs, !0);
    }, _.max = function(obj, iterator, context) {
        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) return Math.max.apply(Math, obj);
        if (!iterator && _.isEmpty(obj)) return -1/0;
        var result = {
            computed: -1/0,
            value: -1/0
        };
        return each(obj, function(value, index, list) {
            var computed = iterator ? iterator.call(context, value, index, list) : value;
            computed > result.computed && (result = {
                value: value,
                computed: computed
            });
        }), result.value;
    }, _.min = function(obj, iterator, context) {
        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) return Math.min.apply(Math, obj);
        if (!iterator && _.isEmpty(obj)) return 1/0;
        var result = {
            computed: 1/0,
            value: 1/0
        };
        return each(obj, function(value, index, list) {
            var computed = iterator ? iterator.call(context, value, index, list) : value;
            computed < result.computed && (result = {
                value: value,
                computed: computed
            });
        }), result.value;
    }, _.shuffle = function(obj) {
        var rand, index = 0, shuffled = [];
        return each(obj, function(value) {
            rand = _.random(index++), shuffled[index - 1] = shuffled[rand], shuffled[rand] = value;
        }), shuffled;
    }, _.sample = function(obj, n, guard) {
        return null == n || guard ? (obj.length !== +obj.length && (obj = _.values(obj)), 
        obj[_.random(obj.length - 1)]) : _.shuffle(obj).slice(0, Math.max(0, n));
    };
    var lookupIterator = function(value) {
        return _.isFunction(value) ? value : function(obj) {
            return obj[value];
        };
    };
    _.sortBy = function(obj, value, context) {
        var iterator = lookupIterator(value);
        return _.pluck(_.map(obj, function(value, index, list) {
            return {
                value: value,
                index: index,
                criteria: iterator.call(context, value, index, list)
            };
        }).sort(function(left, right) {
            var a = left.criteria, b = right.criteria;
            if (a !== b) {
                if (a > b || void 0 === a) return 1;
                if (b > a || void 0 === b) return -1;
            }
            return left.index - right.index;
        }), "value");
    };
    var group = function(behavior) {
        return function(obj, value, context) {
            var result = {}, iterator = null == value ? _.identity : lookupIterator(value);
            return each(obj, function(value, index) {
                var key = iterator.call(context, value, index, obj);
                behavior(result, key, value);
            }), result;
        };
    };
    _.groupBy = group(function(result, key, value) {
        (_.has(result, key) ? result[key] : result[key] = []).push(value);
    }), _.indexBy = group(function(result, key, value) {
        result[key] = value;
    }), _.countBy = group(function(result, key) {
        _.has(result, key) ? result[key]++ : result[key] = 1;
    }), _.sortedIndex = function(array, obj, iterator, context) {
        iterator = null == iterator ? _.identity : lookupIterator(iterator);
        for (var value = iterator.call(context, obj), low = 0, high = array.length; high > low; ) {
            var mid = low + high >>> 1;
            iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
        }
        return low;
    }, _.toArray = function(obj) {
        return obj ? _.isArray(obj) ? slice.call(obj) : obj.length === +obj.length ? _.map(obj, _.identity) : _.values(obj) : [];
    }, _.size = function(obj) {
        return null == obj ? 0 : obj.length === +obj.length ? obj.length : _.keys(obj).length;
    }, _.first = _.head = _.take = function(array, n, guard) {
        return null == array ? void 0 : null == n || guard ? array[0] : slice.call(array, 0, n);
    }, _.initial = function(array, n, guard) {
        return slice.call(array, 0, array.length - (null == n || guard ? 1 : n));
    }, _.last = function(array, n, guard) {
        return null == array ? void 0 : null == n || guard ? array[array.length - 1] : slice.call(array, Math.max(array.length - n, 0));
    }, _.rest = _.tail = _.drop = function(array, n, guard) {
        return slice.call(array, null == n || guard ? 1 : n);
    }, _.compact = function(array) {
        return _.filter(array, _.identity);
    };
    var flatten = function(input, shallow, output) {
        return shallow && _.every(input, _.isArray) ? concat.apply(output, input) : (each(input, function(value) {
            _.isArray(value) || _.isArguments(value) ? shallow ? push.apply(output, value) : flatten(value, shallow, output) : output.push(value);
        }), output);
    };
    _.flatten = function(array, shallow) {
        return flatten(array, shallow, []);
    }, _.without = function(array) {
        return _.difference(array, slice.call(arguments, 1));
    }, _.uniq = _.unique = function(array, isSorted, iterator, context) {
        _.isFunction(isSorted) && (context = iterator, iterator = isSorted, isSorted = !1);
        var initial = iterator ? _.map(array, iterator, context) : array, results = [], seen = [];
        return each(initial, function(value, index) {
            (isSorted ? index && seen[seen.length - 1] === value : _.contains(seen, value)) || (seen.push(value), 
            results.push(array[index]));
        }), results;
    }, _.union = function() {
        return _.uniq(_.flatten(arguments, !0));
    }, _.intersection = function(array) {
        var rest = slice.call(arguments, 1);
        return _.filter(_.uniq(array), function(item) {
            return _.every(rest, function(other) {
                return _.indexOf(other, item) >= 0;
            });
        });
    }, _.difference = function(array) {
        var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
        return _.filter(array, function(value) {
            return !_.contains(rest, value);
        });
    }, _.zip = function() {
        for (var length = _.max(_.pluck(arguments, "length").concat(0)), results = new Array(length), i = 0; length > i; i++) results[i] = _.pluck(arguments, "" + i);
        return results;
    }, _.object = function(list, values) {
        if (null == list) return {};
        for (var result = {}, i = 0, length = list.length; length > i; i++) values ? result[list[i]] = values[i] : result[list[i][0]] = list[i][1];
        return result;
    }, _.indexOf = function(array, item, isSorted) {
        if (null == array) return -1;
        var i = 0, length = array.length;
        if (isSorted) {
            if ("number" != typeof isSorted) return i = _.sortedIndex(array, item), array[i] === item ? i : -1;
            i = 0 > isSorted ? Math.max(0, length + isSorted) : isSorted;
        }
        if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
        for (;length > i; i++) if (array[i] === item) return i;
        return -1;
    }, _.lastIndexOf = function(array, item, from) {
        if (null == array) return -1;
        var hasIndex = null != from;
        if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
        for (var i = hasIndex ? from : array.length; i--; ) if (array[i] === item) return i;
        return -1;
    }, _.range = function(start, stop, step) {
        arguments.length <= 1 && (stop = start || 0, start = 0), step = arguments[2] || 1;
        for (var length = Math.max(Math.ceil((stop - start) / step), 0), idx = 0, range = new Array(length); length > idx; ) range[idx++] = start, 
        start += step;
        return range;
    };
    var ctor = function() {};
    _.bind = function(func, context) {
        var args, bound;
        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
        if (!_.isFunction(func)) throw new TypeError();
        return args = slice.call(arguments, 2), bound = function() {
            if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
            ctor.prototype = func.prototype;
            var self = new ctor();
            ctor.prototype = null;
            var result = func.apply(self, args.concat(slice.call(arguments)));
            return Object(result) === result ? result : self;
        };
    }, _.partial = function(func) {
        var args = slice.call(arguments, 1);
        return function() {
            return func.apply(this, args.concat(slice.call(arguments)));
        };
    }, _.bindAll = function(obj) {
        var funcs = slice.call(arguments, 1);
        if (0 === funcs.length) throw new Error("bindAll must be passed function names");
        return each(funcs, function(f) {
            obj[f] = _.bind(obj[f], obj);
        }), obj;
    }, _.memoize = function(func, hasher) {
        var memo = {};
        return hasher || (hasher = _.identity), function() {
            var key = hasher.apply(this, arguments);
            return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);
        };
    }, _.delay = function(func, wait) {
        var args = slice.call(arguments, 2);
        return setTimeout(function() {
            return func.apply(null, args);
        }, wait);
    }, _.defer = function(func) {
        return _.delay.apply(_, [ func, 1 ].concat(slice.call(arguments, 1)));
    }, _.throttle = function(func, wait, options) {
        var context, args, result, timeout = null, previous = 0;
        options || (options = {});
        var later = function() {
            previous = options.leading === !1 ? 0 : new Date(), timeout = null, result = func.apply(context, args);
        };
        return function() {
            var now = new Date();
            previous || options.leading !== !1 || (previous = now);
            var remaining = wait - (now - previous);
            return context = this, args = arguments, 0 >= remaining ? (clearTimeout(timeout), 
            timeout = null, previous = now, result = func.apply(context, args)) : timeout || options.trailing === !1 || (timeout = setTimeout(later, remaining)), 
            result;
        };
    }, _.debounce = function(func, wait, immediate) {
        var timeout, args, context, timestamp, result;
        return function() {
            context = this, args = arguments, timestamp = new Date();
            var later = function() {
                var last = new Date() - timestamp;
                wait > last ? timeout = setTimeout(later, wait - last) : (timeout = null, immediate || (result = func.apply(context, args)));
            }, callNow = immediate && !timeout;
            return timeout || (timeout = setTimeout(later, wait)), callNow && (result = func.apply(context, args)), 
            result;
        };
    }, _.once = function(func) {
        var memo, ran = !1;
        return function() {
            return ran ? memo : (ran = !0, memo = func.apply(this, arguments), func = null, 
            memo);
        };
    }, _.wrap = function(func, wrapper) {
        return function() {
            var args = [ func ];
            return push.apply(args, arguments), wrapper.apply(this, args);
        };
    }, _.compose = function() {
        var funcs = arguments;
        return function() {
            for (var args = arguments, i = funcs.length - 1; i >= 0; i--) args = [ funcs[i].apply(this, args) ];
            return args[0];
        };
    }, _.after = function(times, func) {
        return function() {
            return --times < 1 ? func.apply(this, arguments) : void 0;
        };
    }, _.keys = nativeKeys || function(obj) {
        if (obj !== Object(obj)) throw new TypeError("Invalid object");
        var keys = [];
        for (var key in obj) _.has(obj, key) && keys.push(key);
        return keys;
    }, _.values = function(obj) {
        for (var keys = _.keys(obj), length = keys.length, values = new Array(length), i = 0; length > i; i++) values[i] = obj[keys[i]];
        return values;
    }, _.pairs = function(obj) {
        for (var keys = _.keys(obj), length = keys.length, pairs = new Array(length), i = 0; length > i; i++) pairs[i] = [ keys[i], obj[keys[i]] ];
        return pairs;
    }, _.invert = function(obj) {
        for (var result = {}, keys = _.keys(obj), i = 0, length = keys.length; length > i; i++) result[obj[keys[i]]] = keys[i];
        return result;
    }, _.functions = _.methods = function(obj) {
        var names = [];
        for (var key in obj) _.isFunction(obj[key]) && names.push(key);
        return names.sort();
    }, _.extend = function(obj) {
        return each(slice.call(arguments, 1), function(source) {
            if (source) for (var prop in source) obj[prop] = source[prop];
        }), obj;
    }, _.pick = function(obj) {
        var copy = {}, keys = concat.apply(ArrayProto, slice.call(arguments, 1));
        return each(keys, function(key) {
            key in obj && (copy[key] = obj[key]);
        }), copy;
    }, _.omit = function(obj) {
        var copy = {}, keys = concat.apply(ArrayProto, slice.call(arguments, 1));
        for (var key in obj) _.contains(keys, key) || (copy[key] = obj[key]);
        return copy;
    }, _.defaults = function(obj) {
        return each(slice.call(arguments, 1), function(source) {
            if (source) for (var prop in source) void 0 === obj[prop] && (obj[prop] = source[prop]);
        }), obj;
    }, _.clone = function(obj) {
        return _.isObject(obj) ? _.isArray(obj) ? obj.slice() : _.extend({}, obj) : obj;
    }, _.tap = function(obj, interceptor) {
        return interceptor(obj), obj;
    };
    var eq = function(a, b, aStack, bStack) {
        if (a === b) return 0 !== a || 1 / a == 1 / b;
        if (null == a || null == b) return a === b;
        a instanceof _ && (a = a._wrapped), b instanceof _ && (b = b._wrapped);
        var className = toString.call(a);
        if (className != toString.call(b)) return !1;
        switch (className) {
          case "[object String]":
            return a == String(b);

          case "[object Number]":
            return a != +a ? b != +b : 0 == a ? 1 / a == 1 / b : a == +b;

          case "[object Date]":
          case "[object Boolean]":
            return +a == +b;

          case "[object RegExp]":
            return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
        }
        if ("object" != typeof a || "object" != typeof b) return !1;
        for (var length = aStack.length; length--; ) if (aStack[length] == a) return bStack[length] == b;
        var aCtor = a.constructor, bCtor = b.constructor;
        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) return !1;
        aStack.push(a), bStack.push(b);
        var size = 0, result = !0;
        if ("[object Array]" == className) {
            if (size = a.length, result = size == b.length) for (;size-- && (result = eq(a[size], b[size], aStack, bStack)); ) ;
        } else {
            for (var key in a) if (_.has(a, key) && (size++, !(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)))) break;
            if (result) {
                for (key in b) if (_.has(b, key) && !size--) break;
                result = !size;
            }
        }
        return aStack.pop(), bStack.pop(), result;
    };
    _.isEqual = function(a, b) {
        return eq(a, b, [], []);
    }, _.isEmpty = function(obj) {
        if (null == obj) return !0;
        if (_.isArray(obj) || _.isString(obj)) return 0 === obj.length;
        for (var key in obj) if (_.has(obj, key)) return !1;
        return !0;
    }, _.isElement = function(obj) {
        return !(!obj || 1 !== obj.nodeType);
    }, _.isArray = nativeIsArray || function(obj) {
        return "[object Array]" == toString.call(obj);
    }, _.isObject = function(obj) {
        return obj === Object(obj);
    }, each([ "Arguments", "Function", "String", "Number", "Date", "RegExp" ], function(name) {
        _["is" + name] = function(obj) {
            return toString.call(obj) == "[object " + name + "]";
        };
    }), _.isArguments(arguments) || (_.isArguments = function(obj) {
        return !(!obj || !_.has(obj, "callee"));
    }), "function" != typeof /./ && (_.isFunction = function(obj) {
        return "function" == typeof obj;
    }), _.isFinite = function(obj) {
        return isFinite(obj) && !isNaN(parseFloat(obj));
    }, _.isNaN = function(obj) {
        return _.isNumber(obj) && obj != +obj;
    }, _.isBoolean = function(obj) {
        return obj === !0 || obj === !1 || "[object Boolean]" == toString.call(obj);
    }, _.isNull = function(obj) {
        return null === obj;
    }, _.isUndefined = function(obj) {
        return void 0 === obj;
    }, _.has = function(obj, key) {
        return hasOwnProperty.call(obj, key);
    }, _.noConflict = function() {
        return root._ = previousUnderscore, this;
    }, _.identity = function(value) {
        return value;
    }, _.times = function(n, iterator, context) {
        for (var accum = Array(Math.max(0, n)), i = 0; n > i; i++) accum[i] = iterator.call(context, i);
        return accum;
    }, _.random = function(min, max) {
        return null == max && (max = min, min = 0), min + Math.floor(Math.random() * (max - min + 1));
    };
    var entityMap = {
        escape: {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#x27;"
        }
    };
    entityMap.unescape = _.invert(entityMap.escape);
    var entityRegexes = {
        escape: new RegExp("[" + _.keys(entityMap.escape).join("") + "]", "g"),
        unescape: new RegExp("(" + _.keys(entityMap.unescape).join("|") + ")", "g")
    };
    _.each([ "escape", "unescape" ], function(method) {
        _[method] = function(string) {
            return null == string ? "" : ("" + string).replace(entityRegexes[method], function(match) {
                return entityMap[method][match];
            });
        };
    }), _.result = function(object, property) {
        if (null == object) return void 0;
        var value = object[property];
        return _.isFunction(value) ? value.call(object) : value;
    }, _.mixin = function(obj) {
        each(_.functions(obj), function(name) {
            var func = _[name] = obj[name];
            _.prototype[name] = function() {
                var args = [ this._wrapped ];
                return push.apply(args, arguments), result.call(this, func.apply(_, args));
            };
        });
    };
    var idCounter = 0;
    _.uniqueId = function(prefix) {
        var id = ++idCounter + "";
        return prefix ? prefix + id : id;
    }, _.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var noMatch = /(.)^/, escapes = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "	": "t",
        "\u2028": "u2028",
        "\u2029": "u2029"
    }, escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    _.template = function(text, data, settings) {
        var render;
        settings = _.defaults({}, settings, _.templateSettings);
        var matcher = new RegExp([ (settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source ].join("|") + "|$", "g"), index = 0, source = "__p+='";
        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
            return source += text.slice(index, offset).replace(escaper, function(match) {
                return "\\" + escapes[match];
            }), escape && (source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'"), 
            interpolate && (source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'"), 
            evaluate && (source += "';\n" + evaluate + "\n__p+='"), index = offset + match.length, 
            match;
        }), source += "';\n", settings.variable || (source = "with(obj||{}){\n" + source + "}\n"), 
        source = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
        try {
            render = new Function(settings.variable || "obj", "_", source);
        } catch (e) {
            throw e.source = source, e;
        }
        if (data) return render(data, _);
        var template = function(data) {
            return render.call(this, data, _);
        };
        return template.source = "function(" + (settings.variable || "obj") + "){\n" + source + "}", 
        template;
    }, _.chain = function(obj) {
        return _(obj).chain();
    };
    var result = function(obj) {
        return this._chain ? _(obj).chain() : obj;
    };
    _.mixin(_), each([ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            var obj = this._wrapped;
            return method.apply(obj, arguments), "shift" != name && "splice" != name || 0 !== obj.length || delete obj[0], 
            result.call(this, obj);
        };
    }), each([ "concat", "join", "slice" ], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            return result.call(this, method.apply(this._wrapped, arguments));
        };
    }), _.extend(_.prototype, {
        chain: function() {
            return this._chain = !0, this;
        },
        value: function() {
            return this._wrapped;
        }
    });
}).call(this), window.Swipe = function(element, options) {
    return element ? (this.options = options || {}, this.index = this.options.startSlide || 0, 
    this.speed = this.options.speed || 300, this.callback = this.options.callback || function() {}, 
    this.delay = this.options.auto || 0, this.canDrag = void 0 === this.options.canDrag ? !0 : this.options.canDrag, 
    this.callbackScope = this.options.callbackScope || null, this.container = element, 
    this.element = this.container.children[0], this.container.style.overflow = "hidden", 
    this.element.style.listStyle = "none", this.element.style.margin = 0, this.setup(), 
    this.begin(), this.element.addEventListener && (this.canDrag && (this.element.addEventListener("touchstart", this, !1), 
    this.element.addEventListener("touchmove", this, !1), this.element.addEventListener("touchend", this, !1), 
    this.element.addEventListener("touchcancel", this, !1)), this.element.addEventListener("webkitTransitionEnd", this, !1), 
    this.element.addEventListener("msTransitionEnd", this, !1), this.element.addEventListener("oTransitionEnd", this, !1), 
    this.element.addEventListener("transitionend", this, !1), window.addEventListener("resize", this, !1)), 
    void 0) : null;
}, Swipe.prototype = {
    setup: function() {
        if (this.slides = this.element.children, this.length = this.slides.length, this.length < 2) return null;
        if (this.width = Math.ceil("getBoundingClientRect" in this.container ? this.container.getBoundingClientRect().width : this.container.offsetWidth), 
        0 === this.width && "function" == typeof window.getComputedStyle && (this.width = window.getComputedStyle(this.container, null).width.replace("px", "")), 
        !this.width) return null;
        var origVisibility = this.container.style.visibility;
        this.container.style.visibility = "hidden", this.element.style.width = Math.ceil(this.slides.length * this.width) + "px";
        for (var index = this.slides.length; index--; ) {
            var el = this.slides[index];
            el.style.width = this.width + "px", el.style.display = "table-cell", el.style.verticalAlign = "top";
        }
        this.slide(this.index, 0), this.container.style.visibility = origVisibility;
    },
    slide: function(index, duration) {
        var style = this.element.style;
        void 0 == duration && (duration = this.speed), style.webkitTransitionDuration = style.MozTransitionDuration = style.msTransitionDuration = style.OTransitionDuration = style.transitionDuration = duration + "ms", 
        style.MozTransform = style.webkitTransform = "translate3d(" + -(index * this.width) + "px,0,0)", 
        style.msTransform = style.OTransform = "translateX(" + -(index * this.width) + "px)", 
        this.index = index;
    },
    getPos: function() {
        return this.index;
    },
    prev: function(delay) {
        this.delay = delay || 0, clearTimeout(this.interval), this.index ? this.slide(this.index - 1, this.speed) : this.slide(this.length - 1, this.speed);
    },
    next: function(delay) {
        this.delay = delay || 0, clearTimeout(this.interval), this.index < this.length - 1 ? this.slide(this.index + 1, this.speed) : this.slide(0, this.speed);
    },
    begin: function() {
        var _this = this;
        this.interval = this.delay ? setTimeout(function() {
            _this.next(_this.delay);
        }, this.delay) : 0;
    },
    stop: function() {
        this.delay = 0, clearTimeout(this.interval);
    },
    resume: function() {
        this.delay = this.options.auto || 0, this.begin();
    },
    handleEvent: function(e) {
        switch (e.type) {
          case "touchstart":
            this.canDrag && this.onTouchStart(e);
            break;

          case "touchmove":
            this.canDrag && this.onTouchMove(e);
            break;

          case "touchcancel":
          case "touchend":
            this.canDrag && this.onTouchEnd(e);
            break;

          case "webkitTransitionEnd":
          case "msTransitionEnd":
          case "oTransitionEnd":
          case "transitionend":
            this.transitionEnd(e);
            break;

          case "resize":
            this.setup();
        }
    },
    transitionEnd: function(e) {
        this.delay && this.begin(), this.callback(e, this.index, this.slides[this.index], this.callbackScope);
    },
    onTouchStart: function(e) {
        this.start = {
            pageX: e.touches[0].pageX,
            pageY: e.touches[0].pageY,
            time: Number(new Date())
        }, this.isScrolling = void 0, this.deltaX = 0, this.element.style.MozTransitionDuration = this.element.style.webkitTransitionDuration = 0, 
        e.stopPropagation();
    },
    onTouchMove: function(e) {
        e.touches.length > 1 || e.scale && 1 !== e.scale || (this.deltaX = e.touches[0].pageX - this.start.pageX, 
        "undefined" == typeof this.isScrolling && (this.isScrolling = !!(this.isScrolling || Math.abs(this.deltaX) < Math.abs(e.touches[0].pageY - this.start.pageY))), 
        this.isScrolling || (e.preventDefault(), clearTimeout(this.interval), this.deltaX = this.deltaX / (!this.index && this.deltaX > 0 || this.index == this.length - 1 && this.deltaX < 0 ? Math.abs(this.deltaX) / this.width + 1 : 1), 
        this.element.style.MozTransform = this.element.style.webkitTransform = "translate3d(" + (this.deltaX - this.index * this.width) + "px,0,0)", 
        e.stopPropagation()));
    },
    onTouchEnd: function(e) {
        var isValidSlide = Number(new Date()) - this.start.time < 250 && Math.abs(this.deltaX) > 20 || Math.abs(this.deltaX) > this.width / 2, isPastBounds = !this.index && this.deltaX > 0 || this.index == this.length - 1 && this.deltaX < 0;
        this.isScrolling || this.slide(this.index + (isValidSlide && !isPastBounds ? this.deltaX < 0 ? 1 : -1 : 0), this.speed), 
        e.stopPropagation();
    }
}, function() {
    (function($, window, document) {
        var Plugin, defaults, pluginName;
        return pluginName = "slidesjs", defaults = {
            width: 940,
            height: 528,
            start: 1,
            navigation: {
                active: !0,
                effect: "slide"
            },
            pagination: {
                active: !0,
                effect: "slide"
            },
            play: {
                active: !1,
                effect: "slide",
                interval: 5e3,
                auto: !1,
                swap: !0,
                pauseOnHover: !1,
                restartDelay: 2500
            },
            effect: {
                slide: {
                    speed: 500
                },
                fade: {
                    speed: 300,
                    crossfade: !0
                }
            },
            callback: {
                loaded: function() {},
                start: function() {},
                complete: function() {}
            }
        }, Plugin = function() {
            function Plugin(element, options) {
                this.element = element, this.options = $.extend(!0, {}, defaults, options), this._defaults = defaults, 
                this._name = pluginName, this.init();
            }
            return Plugin;
        }(), Plugin.prototype.init = function() {
            var $element, nextButton, pagination, playButton, prevButton, stopButton, _this = this;
            return $element = $(this.element), this.data = $.data(this), $.data(this, "animating", !1), 
            $.data(this, "total", $element.children().not(".slidesjs-navigation", $element).length), 
            $.data(this, "current", this.options.start - 1), $.data(this, "vendorPrefix", this._getVendorPrefix()), 
            "undefined" != typeof TouchEvent && ($.data(this, "touch", !0), this.options.effect.slide.speed = this.options.effect.slide.speed / 2), 
            $element.css({
                overflow: "hidden"
            }), $element.slidesContainer = $element.children().not(".slidesjs-navigation", $element).wrapAll("<div class='slidesjs-container'>", $element).parent().css({
                overflow: "hidden",
                position: "relative"
            }), $(".slidesjs-container", $element).wrapInner("<div class='slidesjs-control'>", $element).children(), 
            $(".slidesjs-control", $element).css({
                position: "relative",
                left: 0
            }), $(".slidesjs-control", $element).children().addClass("slidesjs-slide").css({
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                zIndex: 0,
                display: "none",
                webkitBackfaceVisibility: "hidden"
            }), $.each($(".slidesjs-control", $element).children(), function(i) {
                var $slide;
                return $slide = $(this), $slide.attr("slidesjs-index", i);
            }), this.data.touch && ($(".slidesjs-control", $element).on("touchstart", function(e) {
                return _this._touchstart(e);
            }), $(".slidesjs-control", $element).on("touchmove", function(e) {
                return _this._touchmove(e);
            }), $(".slidesjs-control", $element).on("touchend", function(e) {
                return _this._touchend(e);
            })), $element.fadeIn(0), this.update(), this.data.touch && this._setuptouch(), $(".slidesjs-control", $element).children(":eq(" + this.data.current + ")").eq(0).fadeIn(0, function() {
                return $(this).css({
                    zIndex: 10
                });
            }), this.options.navigation.active && (prevButton = $("<a>", {
                "class": "slidesjs-previous slidesjs-navigation",
                href: "#",
                title: "Previous",
                text: "Previous"
            }).appendTo($element), nextButton = $("<a>", {
                "class": "slidesjs-next slidesjs-navigation",
                href: "#",
                title: "Next",
                text: "Next"
            }).appendTo($element)), $(".slidesjs-next", $element).click(function(e) {
                return e.preventDefault(), _this.stop(!0), _this.next(_this.options.navigation.effect);
            }), $(".slidesjs-previous", $element).click(function(e) {
                return e.preventDefault(), _this.stop(!0), _this.previous(_this.options.navigation.effect);
            }), this.options.play.active && (playButton = $("<a>", {
                "class": "slidesjs-play slidesjs-navigation",
                href: "#",
                title: "Play",
                text: "Play"
            }).appendTo($element), stopButton = $("<a>", {
                "class": "slidesjs-stop slidesjs-navigation",
                href: "#",
                title: "Stop",
                text: "Stop"
            }).appendTo($element), playButton.click(function(e) {
                return e.preventDefault(), _this.play(!0);
            }), stopButton.click(function(e) {
                return e.preventDefault(), _this.stop(!0);
            }), this.options.play.swap && stopButton.css({
                display: "none"
            })), this.options.pagination.active && (pagination = $("<ul>", {
                "class": "slidesjs-pagination"
            }).appendTo($element), $.each(new Array(this.data.total), function(i) {
                var paginationItem, paginationLink;
                return paginationItem = $("<li>", {
                    "class": "slidesjs-pagination-item"
                }).appendTo(pagination), paginationLink = $("<a>", {
                    href: "#",
                    "data-slidesjs-item": i,
                    html: i + 1
                }).appendTo(paginationItem), paginationLink.click(function(e) {
                    return e.preventDefault(), _this.stop(!0), _this.goto(1 * $(e.currentTarget).attr("data-slidesjs-item") + 1);
                });
            })), $(window).bind("resize", function() {
                return _this.update();
            }), this._setActive(), this.options.play.auto && this.play(), this.options.callback.loaded(this.options.start);
        }, Plugin.prototype._setActive = function(number) {
            var $element, current;
            return $element = $(this.element), this.data = $.data(this), current = number > -1 ? number : this.data.current, 
            $(".active", $element).removeClass("active"), $(".slidesjs-pagination li:eq(" + current + ") a", $element).addClass("active");
        }, Plugin.prototype.update = function() {
            var $element, height, width;
            return $element = $(this.element), this.data = $.data(this), $(".slidesjs-control", $element).children(":not(:eq(" + this.data.current + "))").css({
                display: "none",
                left: 0,
                zIndex: 0
            }), width = $element.width(), height = this.options.height / this.options.width * width, 
            this.options.width = width, this.options.height = height, $(".slidesjs-control, .slidesjs-container", $element).css({
                width: width,
                height: height
            });
        }, Plugin.prototype.next = function(effect) {
            var $element;
            return $element = $(this.element), this.data = $.data(this), $.data(this, "direction", "next"), 
            void 0 === effect && (effect = this.options.navigation.effect), "fade" === effect ? this._fade() : this._slide();
        }, Plugin.prototype.previous = function(effect) {
            var $element;
            return $element = $(this.element), this.data = $.data(this), $.data(this, "direction", "previous"), 
            void 0 === effect && (effect = this.options.navigation.effect), "fade" === effect ? this._fade() : this._slide();
        }, Plugin.prototype.goto = function(number) {
            var $element, effect;
            if ($element = $(this.element), this.data = $.data(this), void 0 === effect && (effect = this.options.pagination.effect), 
            number > this.data.total ? number = this.data.total : 1 > number && (number = 1), 
            "number" == typeof number) return "fade" === effect ? this._fade(number) : this._slide(number);
            if ("string" == typeof number) {
                if ("first" === number) return "fade" === effect ? this._fade(0) : this._slide(0);
                if ("last" === number) return "fade" === effect ? this._fade(this.data.total) : this._slide(this.data.total);
            }
        }, Plugin.prototype._setuptouch = function() {
            var $element, next, previous, slidesControl;
            return $element = $(this.element), this.data = $.data(this), slidesControl = $(".slidesjs-control", $element), 
            next = this.data.current + 1, previous = this.data.current - 1, 0 > previous && (previous = this.data.total - 1), 
            next > this.data.total - 1 && (next = 0), slidesControl.children(":eq(" + next + ")").css({
                display: "block",
                left: this.options.width
            }), slidesControl.children(":eq(" + previous + ")").css({
                display: "block",
                left: -this.options.width
            });
        }, Plugin.prototype._touchstart = function(e) {
            var $element, touches;
            return $element = $(this.element), this.data = $.data(this), touches = e.originalEvent.touches[0], 
            this._setuptouch(), $.data(this, "touchtimer", Number(new Date())), $.data(this, "touchstartx", touches.pageX), 
            $.data(this, "touchstarty", touches.pageY), e.stopPropagation();
        }, Plugin.prototype._touchend = function(e) {
            var $element, duration, prefix, slidesControl, timing, touches, transform, _this = this;
            return $element = $(this.element), this.data = $.data(this), touches = e.originalEvent.touches[0], 
            slidesControl = $(".slidesjs-control", $element), slidesControl.position().left > .5 * this.options.width || slidesControl.position().left > .1 * this.options.width && Number(new Date()) - this.data.touchtimer < 250 ? ($.data(this, "direction", "previous"), 
            this._slide()) : slidesControl.position().left < -(.5 * this.options.width) || slidesControl.position().left < -(.1 * this.options.width) && Number(new Date()) - this.data.touchtimer < 250 ? ($.data(this, "direction", "next"), 
            this._slide()) : (prefix = this.data.vendorPrefix, transform = prefix + "Transform", 
            duration = prefix + "TransitionDuration", timing = prefix + "TransitionTimingFunction", 
            slidesControl[0].style[transform] = "translateX(0px)", slidesControl[0].style[duration] = .85 * this.options.effect.slide.speed + "ms"), 
            slidesControl.on("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd", function() {
                return prefix = _this.data.vendorPrefix, transform = prefix + "Transform", duration = prefix + "TransitionDuration", 
                timing = prefix + "TransitionTimingFunction", slidesControl[0].style[transform] = "", 
                slidesControl[0].style[duration] = "", slidesControl[0].style[timing] = "";
            }), e.stopPropagation();
        }, Plugin.prototype._touchmove = function(e) {
            var $element, prefix, slidesControl, touches, transform;
            return $element = $(this.element), this.data = $.data(this), touches = e.originalEvent.touches[0], 
            prefix = this.data.vendorPrefix, slidesControl = $(".slidesjs-control", $element), 
            transform = prefix + "Transform", $.data(this, "scrolling", Math.abs(touches.pageX - this.data.touchstartx) < Math.abs(touches.pageY - this.data.touchstarty)), 
            this.data.animating || this.data.scrolling || (e.preventDefault(), this._setuptouch(), 
            slidesControl[0].style[transform] = "translateX(" + (touches.pageX - this.data.touchstartx) + "px)"), 
            e.stopPropagation();
        }, Plugin.prototype.play = function(next) {
            var $element, currentSlide, slidesContainer, _this = this;
            return $element = $(this.element), this.data = $.data(this), !this.data.playInterval && (next && (currentSlide = this.data.current, 
            this.data.direction = "next", "fade" === this.options.play.effect ? this._fade() : this._slide()), 
            $.data(this, "playInterval", setInterval(function() {
                return currentSlide = _this.data.current, _this.data.direction = "next", "fade" === _this.options.play.effect ? _this._fade() : _this._slide();
            }, this.options.play.interval)), slidesContainer = $(".slidesjs-container", $element), 
            this.options.play.pauseOnHover && (slidesContainer.unbind(), slidesContainer.bind("mouseenter", function() {
                return _this.stop();
            }), slidesContainer.bind("mouseleave", function() {
                return _this.options.play.restartDelay ? $.data(_this, "restartDelay", setTimeout(function() {
                    return _this.play(!0);
                }, _this.options.play.restartDelay)) : _this.play();
            })), $.data(this, "playing", !0), $(".slidesjs-play", $element).addClass("slidesjs-playing"), 
            this.options.play.swap) ? ($(".slidesjs-play", $element).hide(), $(".slidesjs-stop", $element).show()) : void 0;
        }, Plugin.prototype.stop = function(clicked) {
            var $element;
            return $element = $(this.element), this.data = $.data(this), clearInterval(this.data.playInterval), 
            this.options.play.pauseOnHover && clicked && $(".slidesjs-container", $element).unbind(), 
            $.data(this, "playInterval", null), $.data(this, "playing", !1), $(".slidesjs-play", $element).removeClass("slidesjs-playing"), 
            this.options.play.swap ? ($(".slidesjs-stop", $element).hide(), $(".slidesjs-play", $element).show()) : void 0;
        }, Plugin.prototype._slide = function(number) {
            var $element, currentSlide, direction, duration, next, prefix, slidesControl, timing, transform, value, _this = this;
            return $element = $(this.element), this.data = $.data(this), this.data.animating || number === this.data.current + 1 ? void 0 : ($.data(this, "animating", !0), 
            currentSlide = this.data.current, number > -1 ? (number -= 1, value = number > currentSlide ? 1 : -1, 
            direction = number > currentSlide ? -this.options.width : this.options.width, next = number) : (value = "next" === this.data.direction ? 1 : -1, 
            direction = "next" === this.data.direction ? -this.options.width : this.options.width, 
            next = currentSlide + value), -1 === next && (next = this.data.total - 1), next === this.data.total && (next = 0), 
            this._setActive(next), slidesControl = $(".slidesjs-control", $element), number > -1 && slidesControl.children(":not(:eq(" + currentSlide + "))").css({
                display: "none",
                left: 0,
                zIndex: 0
            }), slidesControl.children(":eq(" + next + ")").css({
                display: "block",
                left: value * this.options.width,
                zIndex: 10
            }), this.options.callback.start(currentSlide + 1), this.data.vendorPrefix ? (prefix = this.data.vendorPrefix, 
            transform = prefix + "Transform", duration = prefix + "TransitionDuration", timing = prefix + "TransitionTimingFunction", 
            slidesControl[0].style[transform] = "translateX(" + direction + "px)", slidesControl[0].style[duration] = this.options.effect.slide.speed + "ms", 
            slidesControl.on("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd", function() {
                return slidesControl[0].style[transform] = "", slidesControl[0].style[duration] = "", 
                slidesControl.children(":eq(" + next + ")").css({
                    left: 0
                }), slidesControl.children(":eq(" + currentSlide + ")").css({
                    display: "none",
                    left: 0,
                    zIndex: 0
                }), $.data(_this, "current", next), $.data(_this, "animating", !1), slidesControl.unbind("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd"), 
                slidesControl.children(":not(:eq(" + next + "))").css({
                    display: "none",
                    left: 0,
                    zIndex: 0
                }), _this.data.touch && _this._setuptouch(), _this.options.callback.complete(next + 1);
            })) : slidesControl.stop().animate({
                left: direction
            }, this.options.effect.slide.speed, function() {
                return slidesControl.css({
                    left: 0
                }), slidesControl.children(":eq(" + next + ")").css({
                    left: 0
                }), slidesControl.children(":eq(" + currentSlide + ")").css({
                    display: "none",
                    left: 0,
                    zIndex: 0
                }, $.data(_this, "current", next), $.data(_this, "animating", !1), _this.options.callback.complete(next + 1));
            }));
        }, Plugin.prototype._fade = function(number) {
            var $element, currentSlide, next, slidesControl, value, _this = this;
            return $element = $(this.element), this.data = $.data(this), this.data.animating || number === this.data.current + 1 ? void 0 : ($.data(this, "animating", !0), 
            currentSlide = this.data.current, number ? (number -= 1, value = number > currentSlide ? 1 : -1, 
            next = number) : (value = "next" === this.data.direction ? 1 : -1, next = currentSlide + value), 
            -1 === next && (next = this.data.total - 1), next === this.data.total && (next = 0), 
            this._setActive(next), slidesControl = $(".slidesjs-control", $element), slidesControl.children(":eq(" + next + ")").css({
                display: "none",
                left: 0,
                zIndex: 10
            }), this.options.callback.start(currentSlide + 1), this.options.effect.fade.crossfade ? (slidesControl.children(":eq(" + this.data.current + ")").stop().fadeOut(this.options.effect.fade.speed), 
            slidesControl.children(":eq(" + next + ")").stop().fadeIn(this.options.effect.fade.speed, function() {
                return slidesControl.children(":eq(" + next + ")").css({
                    zIndex: 0
                }), $.data(_this, "animating", !1), $.data(_this, "current", next), _this.options.callback.complete(next + 1);
            })) : slidesControl.children(":eq(" + currentSlide + ")").stop().fadeOut(this.options.effect.fade.speed, function() {
                return slidesControl.children(":eq(" + next + ")").stop().fadeIn(_this.options.effect.fade.speed, function() {
                    return slidesControl.children(":eq(" + next + ")").css({
                        zIndex: 10
                    });
                }), $.data(_this, "animating", !1), $.data(_this, "current", next), _this.options.callback.complete(next + 1);
            }));
        }, Plugin.prototype._getVendorPrefix = function() {
            var body, i, style, transition, vendor;
            for (body = document.body || document.documentElement, style = body.style, transition = "transition", 
            vendor = [ "Moz", "Webkit", "Khtml", "O", "ms" ], transition = transition.charAt(0).toUpperCase() + transition.substr(1), 
            i = 0; i < vendor.length; ) {
                if ("string" == typeof style[vendor[i] + transition]) return vendor[i];
                i++;
            }
            return !1;
        }, $.fn[pluginName] = function(options) {
            return this.each(function() {
                return $.data(this, "plugin_" + pluginName) ? void 0 : $.data(this, "plugin_" + pluginName, new Plugin(this, options));
            });
        };
    })(jQuery, window, document);
}.call(this), function() {
    var __indexOf = [].indexOf || function(item) {
        for (var i = 0, l = this.length; l > i; i++) if (i in this && this[i] === item) return i;
        return -1;
    }, __slice = [].slice;
    (function(root, factory) {
        return "function" == typeof define && define.amd ? define("waypoints", [ "jquery" ], function($) {
            return factory($, root);
        }) : factory(root.jQuery, root);
    })(this, function($, window) {
        var $w, Context, Waypoint, allWaypoints, contextCounter, contextKey, contexts, isTouch, jQMethods, methods, resizeEvent, scrollEvent, waypointCounter, waypointKey, wp, wps;
        return $w = $(window), isTouch = __indexOf.call(window, "ontouchstart") >= 0, allWaypoints = {
            horizontal: {},
            vertical: {}
        }, contextCounter = 1, contexts = {}, contextKey = "waypoints-context-id", resizeEvent = "resize.waypoints", 
        scrollEvent = "scroll.waypoints", waypointCounter = 1, waypointKey = "waypoints-waypoint-ids", 
        wp = "waypoint", wps = "waypoints", Context = function() {
            function Context($element) {
                var _this = this;
                this.$element = $element, this.element = $element[0], this.didResize = !1, this.didScroll = !1, 
                this.id = "context" + contextCounter++, this.oldScroll = {
                    x: $element.scrollLeft(),
                    y: $element.scrollTop()
                }, this.waypoints = {
                    horizontal: {},
                    vertical: {}
                }, $element.data(contextKey, this.id), contexts[this.id] = this, $element.bind(scrollEvent, function() {
                    var scrollHandler;
                    return _this.didScroll || isTouch ? void 0 : (_this.didScroll = !0, scrollHandler = function() {
                        return _this.doScroll(), _this.didScroll = !1;
                    }, window.setTimeout(scrollHandler, $[wps].settings.scrollThrottle));
                }), $element.bind(resizeEvent, function() {
                    var resizeHandler;
                    return _this.didResize ? void 0 : (_this.didResize = !0, resizeHandler = function() {
                        return $[wps]("refresh"), _this.didResize = !1;
                    }, window.setTimeout(resizeHandler, $[wps].settings.resizeThrottle));
                });
            }
            return Context.prototype.doScroll = function() {
                var axes, _this = this;
                return axes = {
                    horizontal: {
                        newScroll: this.$element.scrollLeft(),
                        oldScroll: this.oldScroll.x,
                        forward: "right",
                        backward: "left"
                    },
                    vertical: {
                        newScroll: this.$element.scrollTop(),
                        oldScroll: this.oldScroll.y,
                        forward: "down",
                        backward: "up"
                    }
                }, !isTouch || axes.vertical.oldScroll && axes.vertical.newScroll || $[wps]("refresh"), 
                $.each(axes, function(aKey, axis) {
                    var direction, isForward, triggered;
                    return triggered = [], isForward = axis.newScroll > axis.oldScroll, direction = isForward ? axis.forward : axis.backward, 
                    $.each(_this.waypoints[aKey], function(wKey, waypoint) {
                        var _ref, _ref1;
                        return axis.oldScroll < (_ref = waypoint.offset) && _ref <= axis.newScroll ? triggered.push(waypoint) : axis.newScroll < (_ref1 = waypoint.offset) && _ref1 <= axis.oldScroll ? triggered.push(waypoint) : void 0;
                    }), triggered.sort(function(a, b) {
                        return a.offset - b.offset;
                    }), isForward || triggered.reverse(), $.each(triggered, function(i, waypoint) {
                        return waypoint.options.continuous || i === triggered.length - 1 ? waypoint.trigger([ direction ]) : void 0;
                    });
                }), this.oldScroll = {
                    x: axes.horizontal.newScroll,
                    y: axes.vertical.newScroll
                };
            }, Context.prototype.refresh = function() {
                var axes, cOffset, isWin, _this = this;
                return isWin = $.isWindow(this.element), cOffset = this.$element.offset(), this.doScroll(), 
                axes = {
                    horizontal: {
                        contextOffset: isWin ? 0 : cOffset.left,
                        contextScroll: isWin ? 0 : this.oldScroll.x,
                        contextDimension: this.$element.width(),
                        oldScroll: this.oldScroll.x,
                        forward: "right",
                        backward: "left",
                        offsetProp: "left"
                    },
                    vertical: {
                        contextOffset: isWin ? 0 : cOffset.top,
                        contextScroll: isWin ? 0 : this.oldScroll.y,
                        contextDimension: isWin ? $[wps]("viewportHeight") : this.$element.height(),
                        oldScroll: this.oldScroll.y,
                        forward: "down",
                        backward: "up",
                        offsetProp: "top"
                    }
                }, $.each(axes, function(aKey, axis) {
                    return $.each(_this.waypoints[aKey], function(i, waypoint) {
                        var adjustment, elementOffset, oldOffset, _ref, _ref1;
                        return adjustment = waypoint.options.offset, oldOffset = waypoint.offset, elementOffset = $.isWindow(waypoint.element) ? 0 : waypoint.$element.offset()[axis.offsetProp], 
                        $.isFunction(adjustment) ? adjustment = adjustment.apply(waypoint.element) : "string" == typeof adjustment && (adjustment = parseFloat(adjustment), 
                        waypoint.options.offset.indexOf("%") > -1 && (adjustment = Math.ceil(axis.contextDimension * adjustment / 100))), 
                        waypoint.offset = elementOffset - axis.contextOffset + axis.contextScroll - adjustment, 
                        waypoint.options.onlyOnScroll && null != oldOffset || !waypoint.enabled ? void 0 : null !== oldOffset && oldOffset < (_ref = axis.oldScroll) && _ref <= waypoint.offset ? waypoint.trigger([ axis.backward ]) : null !== oldOffset && oldOffset > (_ref1 = axis.oldScroll) && _ref1 >= waypoint.offset ? waypoint.trigger([ axis.forward ]) : null === oldOffset && axis.oldScroll >= waypoint.offset ? waypoint.trigger([ axis.forward ]) : void 0;
                    });
                });
            }, Context.prototype.checkEmpty = function() {
                return $.isEmptyObject(this.waypoints.horizontal) && $.isEmptyObject(this.waypoints.vertical) ? (this.$element.unbind([ resizeEvent, scrollEvent ].join(" ")), 
                delete contexts[this.id]) : void 0;
            }, Context;
        }(), Waypoint = function() {
            function Waypoint($element, context, options) {
                var idList, _ref;
                options = $.extend({}, $.fn[wp].defaults, options), "bottom-in-view" === options.offset && (options.offset = function() {
                    var contextHeight;
                    return contextHeight = $[wps]("viewportHeight"), $.isWindow(context.element) || (contextHeight = context.$element.height()), 
                    contextHeight - $(this).outerHeight();
                }), this.$element = $element, this.element = $element[0], this.axis = options.horizontal ? "horizontal" : "vertical", 
                this.callback = options.handler, this.context = context, this.enabled = options.enabled, 
                this.id = "waypoints" + waypointCounter++, this.offset = null, this.options = options, 
                context.waypoints[this.axis][this.id] = this, allWaypoints[this.axis][this.id] = this, 
                idList = null != (_ref = $element.data(waypointKey)) ? _ref : [], idList.push(this.id), 
                $element.data(waypointKey, idList);
            }
            return Waypoint.prototype.trigger = function(args) {
                return this.enabled ? (null != this.callback && this.callback.apply(this.element, args), 
                this.options.triggerOnce ? this.destroy() : void 0) : void 0;
            }, Waypoint.prototype.disable = function() {
                return this.enabled = !1;
            }, Waypoint.prototype.enable = function() {
                return this.context.refresh(), this.enabled = !0;
            }, Waypoint.prototype.destroy = function() {
                return delete allWaypoints[this.axis][this.id], delete this.context.waypoints[this.axis][this.id], 
                this.context.checkEmpty();
            }, Waypoint.getWaypointsByElement = function(element) {
                var all, ids;
                return (ids = $(element).data(waypointKey)) ? (all = $.extend({}, allWaypoints.horizontal, allWaypoints.vertical), 
                $.map(ids, function(id) {
                    return all[id];
                })) : [];
            }, Waypoint;
        }(), methods = {
            init: function(f, options) {
                var _ref;
                return null == options && (options = {}), null == (_ref = options.handler) && (options.handler = f), 
                this.each(function() {
                    var $this, context, contextElement, _ref1;
                    return $this = $(this), contextElement = null != (_ref1 = options.context) ? _ref1 : $.fn[wp].defaults.context, 
                    $.isWindow(contextElement) || (contextElement = $this.closest(contextElement)), 
                    contextElement = $(contextElement), context = contexts[contextElement.data(contextKey)], 
                    context || (context = new Context(contextElement)), new Waypoint($this, context, options);
                }), $[wps]("refresh"), this;
            },
            disable: function() {
                return methods._invoke(this, "disable");
            },
            enable: function() {
                return methods._invoke(this, "enable");
            },
            destroy: function() {
                return methods._invoke(this, "destroy");
            },
            prev: function(axis, selector) {
                return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
                    return index > 0 ? stack.push(waypoints[index - 1]) : void 0;
                });
            },
            next: function(axis, selector) {
                return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
                    return index < waypoints.length - 1 ? stack.push(waypoints[index + 1]) : void 0;
                });
            },
            _traverse: function(axis, selector, push) {
                var stack, waypoints;
                return null == axis && (axis = "vertical"), null == selector && (selector = window), 
                waypoints = jQMethods.aggregate(selector), stack = [], this.each(function() {
                    var index;
                    return index = $.inArray(this, waypoints[axis]), push(stack, index, waypoints[axis]);
                }), this.pushStack(stack);
            },
            _invoke: function($elements, method) {
                return $elements.each(function() {
                    var waypoints;
                    return waypoints = Waypoint.getWaypointsByElement(this), $.each(waypoints, function(i, waypoint) {
                        return waypoint[method](), !0;
                    });
                }), this;
            }
        }, $.fn[wp] = function() {
            var args, method;
            return method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [], 
            methods[method] ? methods[method].apply(this, args) : $.isFunction(method) ? methods.init.apply(this, arguments) : $.isPlainObject(method) ? methods.init.apply(this, [ null, method ]) : method ? $.error("The " + method + " method does not exist in jQuery Waypoints.") : $.error("jQuery Waypoints needs a callback function or handler option.");
        }, $.fn[wp].defaults = {
            context: window,
            continuous: !0,
            enabled: !0,
            horizontal: !1,
            offset: 0,
            triggerOnce: !1
        }, jQMethods = {
            refresh: function() {
                return $.each(contexts, function(i, context) {
                    return context.refresh();
                });
            },
            viewportHeight: function() {
                var _ref;
                return null != (_ref = window.innerHeight) ? _ref : $w.height();
            },
            aggregate: function(contextSelector) {
                var collection, waypoints, _ref;
                return collection = allWaypoints, contextSelector && (collection = null != (_ref = contexts[$(contextSelector).data(contextKey)]) ? _ref.waypoints : void 0), 
                collection ? (waypoints = {
                    horizontal: [],
                    vertical: []
                }, $.each(waypoints, function(axis, arr) {
                    return $.each(collection[axis], function(key, waypoint) {
                        return arr.push(waypoint);
                    }), arr.sort(function(a, b) {
                        return a.offset - b.offset;
                    }), waypoints[axis] = $.map(arr, function(waypoint) {
                        return waypoint.element;
                    }), waypoints[axis] = $.unique(waypoints[axis]);
                }), waypoints) : [];
            },
            above: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "vertical", function(context, waypoint) {
                    return waypoint.offset <= context.oldScroll.y;
                });
            },
            below: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "vertical", function(context, waypoint) {
                    return waypoint.offset > context.oldScroll.y;
                });
            },
            left: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "horizontal", function(context, waypoint) {
                    return waypoint.offset <= context.oldScroll.x;
                });
            },
            right: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "horizontal", function(context, waypoint) {
                    return waypoint.offset > context.oldScroll.x;
                });
            },
            enable: function() {
                return jQMethods._invoke("enable");
            },
            disable: function() {
                return jQMethods._invoke("disable");
            },
            destroy: function() {
                return jQMethods._invoke("destroy");
            },
            extendFn: function(methodName, f) {
                return methods[methodName] = f;
            },
            _invoke: function(method) {
                var waypoints;
                return waypoints = $.extend({}, allWaypoints.vertical, allWaypoints.horizontal), 
                $.each(waypoints, function(key, waypoint) {
                    return waypoint[method](), !0;
                });
            },
            _filter: function(selector, axis, test) {
                var context, waypoints;
                return (context = contexts[$(selector).data(contextKey)]) ? (waypoints = [], $.each(context.waypoints[axis], function(i, waypoint) {
                    return test(context, waypoint) ? waypoints.push(waypoint) : void 0;
                }), waypoints.sort(function(a, b) {
                    return a.offset - b.offset;
                }), $.map(waypoints, function(waypoint) {
                    return waypoint.element;
                })) : [];
            }
        }, $[wps] = function() {
            var args, method;
            return method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [], 
            jQMethods[method] ? jQMethods[method].apply(null, args) : jQMethods.aggregate.call(null, method);
        }, $[wps].settings = {
            resizeThrottle: 100,
            scrollThrottle: 30
        }, $w.load(function() {
            return $[wps]("refresh");
        });
    });
}.call(this), function($) {
    function getVendorPropertyName(prop) {
        if (prop in div.style) return prop;
        var prefixes = [ "Moz", "Webkit", "O", "ms" ], prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);
        if (prop in div.style) return prop;
        for (var i = 0; i < prefixes.length; ++i) {
            var vendorProp = prefixes[i] + prop_;
            if (vendorProp in div.style) return vendorProp;
        }
    }
    function checkTransform3dSupport() {
        return div.style[support.transform] = "", div.style[support.transform] = "rotateY(90deg)", 
        "" !== div.style[support.transform];
    }
    function Transform(str) {
        return "string" == typeof str && this.parse(str), this;
    }
    function callOrQueue(self, queue, fn) {
        queue === !0 ? self.queue(fn) : queue ? self.queue(queue, fn) : fn();
    }
    function getProperties(props) {
        var re = [];
        return $.each(props, function(key) {
            key = $.camelCase(key), key = $.transit.propertyMap[key] || $.cssProps[key] || key, 
            key = uncamel(key), -1 === $.inArray(key, re) && re.push(key);
        }), re;
    }
    function getTransition(properties, duration, easing, delay) {
        var props = getProperties(properties);
        $.cssEase[easing] && (easing = $.cssEase[easing]);
        var attribs = "" + toMS(duration) + " " + easing;
        parseInt(delay, 10) > 0 && (attribs += " " + toMS(delay));
        var transitions = [];
        return $.each(props, function(i, name) {
            transitions.push(name + " " + attribs);
        }), transitions.join(", ");
    }
    function registerCssHook(prop, isPixels) {
        isPixels || ($.cssNumber[prop] = !0), $.transit.propertyMap[prop] = support.transform, 
        $.cssHooks[prop] = {
            get: function(elem) {
                var t = $(elem).css("transit:transform");
                return t.get(prop);
            },
            set: function(elem, value) {
                var t = $(elem).css("transit:transform");
                t.setFromString(prop, value), $(elem).css({
                    "transit:transform": t
                });
            }
        };
    }
    function uncamel(str) {
        return str.replace(/([A-Z])/g, function(letter) {
            return "-" + letter.toLowerCase();
        });
    }
    function unit(i, units) {
        return "string" != typeof i || i.match(/^[\-0-9\.]+$/) ? "" + i + units : i;
    }
    function toMS(duration) {
        var i = duration;
        return "string" != typeof i || i.match(/^[\-0-9\.]+/) || (i = $.fx.speeds[i] || $.fx.speeds._default), 
        unit(i, "ms");
    }
    $.transit = {
        version: "0.9.9",
        propertyMap: {
            marginLeft: "margin",
            marginRight: "margin",
            marginBottom: "margin",
            marginTop: "margin",
            paddingLeft: "padding",
            paddingRight: "padding",
            paddingBottom: "padding",
            paddingTop: "padding"
        },
        enabled: !0,
        useTransitionEnd: !1
    };
    var div = document.createElement("div"), support = {}, isChrome = navigator.userAgent.toLowerCase().indexOf("chrome") > -1;
    support.transition = getVendorPropertyName("transition"), support.transitionDelay = getVendorPropertyName("transitionDelay"), 
    support.transform = getVendorPropertyName("transform"), support.transformOrigin = getVendorPropertyName("transformOrigin"), 
    support.transform3d = checkTransform3dSupport();
    var eventNames = {
        transition: "transitionEnd",
        MozTransition: "transitionend",
        OTransition: "oTransitionEnd",
        WebkitTransition: "webkitTransitionEnd",
        msTransition: "MSTransitionEnd"
    }, transitionEnd = support.transitionEnd = eventNames[support.transition] || null;
    for (var key in support) support.hasOwnProperty(key) && "undefined" == typeof $.support[key] && ($.support[key] = support[key]);
    div = null, $.cssEase = {
        _default: "ease",
        "in": "ease-in",
        out: "ease-out",
        "in-out": "ease-in-out",
        snap: "cubic-bezier(0,1,.5,1)",
        easeOutCubic: "cubic-bezier(.215,.61,.355,1)",
        easeInOutCubic: "cubic-bezier(.645,.045,.355,1)",
        easeInCirc: "cubic-bezier(.6,.04,.98,.335)",
        easeOutCirc: "cubic-bezier(.075,.82,.165,1)",
        easeInOutCirc: "cubic-bezier(.785,.135,.15,.86)",
        easeInExpo: "cubic-bezier(.95,.05,.795,.035)",
        easeOutExpo: "cubic-bezier(.19,1,.22,1)",
        easeInOutExpo: "cubic-bezier(1,0,0,1)",
        easeInQuad: "cubic-bezier(.55,.085,.68,.53)",
        easeOutQuad: "cubic-bezier(.25,.46,.45,.94)",
        easeInOutQuad: "cubic-bezier(.455,.03,.515,.955)",
        easeInQuart: "cubic-bezier(.895,.03,.685,.22)",
        easeOutQuart: "cubic-bezier(.165,.84,.44,1)",
        easeInOutQuart: "cubic-bezier(.77,0,.175,1)",
        easeInQuint: "cubic-bezier(.755,.05,.855,.06)",
        easeOutQuint: "cubic-bezier(.23,1,.32,1)",
        easeInOutQuint: "cubic-bezier(.86,0,.07,1)",
        easeInSine: "cubic-bezier(.47,0,.745,.715)",
        easeOutSine: "cubic-bezier(.39,.575,.565,1)",
        easeInOutSine: "cubic-bezier(.445,.05,.55,.95)",
        easeInBack: "cubic-bezier(.6,-.28,.735,.045)",
        easeOutBack: "cubic-bezier(.175, .885,.32,1.275)",
        easeInOutBack: "cubic-bezier(.68,-.55,.265,1.55)"
    }, $.cssHooks["transit:transform"] = {
        get: function(elem) {
            return $(elem).data("transform") || new Transform();
        },
        set: function(elem, v) {
            var value = v;
            value instanceof Transform || (value = new Transform(value)), elem.style[support.transform] = "WebkitTransform" !== support.transform || isChrome ? value.toString() : value.toString(!0), 
            $(elem).data("transform", value);
        }
    }, $.cssHooks.transform = {
        set: $.cssHooks["transit:transform"].set
    }, $.fn.jquery < "1.8" && ($.cssHooks.transformOrigin = {
        get: function(elem) {
            return elem.style[support.transformOrigin];
        },
        set: function(elem, value) {
            elem.style[support.transformOrigin] = value;
        }
    }, $.cssHooks.transition = {
        get: function(elem) {
            return elem.style[support.transition];
        },
        set: function(elem, value) {
            elem.style[support.transition] = value;
        }
    }), registerCssHook("scale"), registerCssHook("translate"), registerCssHook("rotate"), 
    registerCssHook("rotateX"), registerCssHook("rotateY"), registerCssHook("rotate3d"), 
    registerCssHook("perspective"), registerCssHook("skewX"), registerCssHook("skewY"), 
    registerCssHook("x", !0), registerCssHook("y", !0), Transform.prototype = {
        setFromString: function(prop, val) {
            var args = "string" == typeof val ? val.split(",") : val.constructor === Array ? val : [ val ];
            args.unshift(prop), Transform.prototype.set.apply(this, args);
        },
        set: function(prop) {
            var args = Array.prototype.slice.apply(arguments, [ 1 ]);
            this.setter[prop] ? this.setter[prop].apply(this, args) : this[prop] = args.join(",");
        },
        get: function(prop) {
            return this.getter[prop] ? this.getter[prop].apply(this) : this[prop] || 0;
        },
        setter: {
            rotate: function(theta) {
                this.rotate = unit(theta, "deg");
            },
            rotateX: function(theta) {
                this.rotateX = unit(theta, "deg");
            },
            rotateY: function(theta) {
                this.rotateY = unit(theta, "deg");
            },
            scale: function(x, y) {
                void 0 === y && (y = x), this.scale = x + "," + y;
            },
            skewX: function(x) {
                this.skewX = unit(x, "deg");
            },
            skewY: function(y) {
                this.skewY = unit(y, "deg");
            },
            perspective: function(dist) {
                this.perspective = unit(dist, "px");
            },
            x: function(x) {
                this.set("translate", x, null);
            },
            y: function(y) {
                this.set("translate", null, y);
            },
            translate: function(x, y) {
                void 0 === this._translateX && (this._translateX = 0), void 0 === this._translateY && (this._translateY = 0), 
                null !== x && void 0 !== x && (this._translateX = unit(x, "px")), null !== y && void 0 !== y && (this._translateY = unit(y, "px")), 
                this.translate = this._translateX + "," + this._translateY;
            }
        },
        getter: {
            x: function() {
                return this._translateX || 0;
            },
            y: function() {
                return this._translateY || 0;
            },
            scale: function() {
                var s = (this.scale || "1,1").split(",");
                return s[0] && (s[0] = parseFloat(s[0])), s[1] && (s[1] = parseFloat(s[1])), s[0] === s[1] ? s[0] : s;
            },
            rotate3d: function() {
                for (var s = (this.rotate3d || "0,0,0,0deg").split(","), i = 0; 3 >= i; ++i) s[i] && (s[i] = parseFloat(s[i]));
                return s[3] && (s[3] = unit(s[3], "deg")), s;
            }
        },
        parse: function(str) {
            var self = this;
            str.replace(/([a-zA-Z0-9]+)\((.*?)\)/g, function(x, prop, val) {
                self.setFromString(prop, val);
            });
        },
        toString: function(use3d) {
            var re = [];
            for (var i in this) if (this.hasOwnProperty(i)) {
                if (!support.transform3d && ("rotateX" === i || "rotateY" === i || "perspective" === i || "transformOrigin" === i)) continue;
                "_" !== i[0] && (use3d && "scale" === i ? re.push(i + "3d(" + this[i] + ",1)") : use3d && "translate" === i ? re.push(i + "3d(" + this[i] + ",0)") : re.push(i + "(" + this[i] + ")"));
            }
            return re.join(" ");
        }
    }, $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {
        var self = this, delay = 0, queue = !0, theseProperties = jQuery.extend(!0, {}, properties);
        "function" == typeof duration && (callback = duration, duration = void 0), "object" == typeof duration && (easing = duration.easing, 
        delay = duration.delay || 0, queue = duration.queue || !0, callback = duration.complete, 
        duration = duration.duration), "function" == typeof easing && (callback = easing, 
        easing = void 0), "undefined" != typeof theseProperties.easing && (easing = theseProperties.easing, 
        delete theseProperties.easing), "undefined" != typeof theseProperties.duration && (duration = theseProperties.duration, 
        delete theseProperties.duration), "undefined" != typeof theseProperties.complete && (callback = theseProperties.complete, 
        delete theseProperties.complete), "undefined" != typeof theseProperties.queue && (queue = theseProperties.queue, 
        delete theseProperties.queue), "undefined" != typeof theseProperties.delay && (delay = theseProperties.delay, 
        delete theseProperties.delay), "undefined" == typeof duration && (duration = $.fx.speeds._default), 
        "undefined" == typeof easing && (easing = $.cssEase._default), duration = toMS(duration);
        var transitionValue = getTransition(theseProperties, duration, easing, delay), work = $.transit.enabled && support.transition, i = work ? parseInt(duration, 10) + parseInt(delay, 10) : 0;
        if (0 === i) {
            var fn = function(next) {
                self.css(theseProperties), callback && callback.apply(self), next && next();
            };
            return callOrQueue(self, queue, fn), self;
        }
        var oldTransitions = {}, run = function(nextCall) {
            var bound = !1, cb = function() {
                bound && self.unbind(transitionEnd, cb), i > 0 && self.each(function() {
                    this.style[support.transition] = oldTransitions[this] || null;
                }), "function" == typeof callback && callback.apply(self), "function" == typeof nextCall && nextCall();
            };
            i > 0 && transitionEnd && $.transit.useTransitionEnd ? (bound = !0, self.bind(transitionEnd, cb)) : window.setTimeout(cb, i), 
            self.each(function() {
                i > 0 && (this.style[support.transition] = transitionValue), $(this).css(properties);
            });
        }, deferredRun = function(next) {
            this.offsetWidth, run(next);
        };
        return callOrQueue(self, queue, deferredRun), this;
    }, $.transit.getTransitionValue = getTransition;
}(jQuery);

var cataCommon = {
    init: function() {
        console.log("common init"), this.handleHeader(), this.handleSocial(), $(document).on("click", "#overlay-close-button, .overlay-bg", function(event) {
            return event.preventDefault(), $(".overlay").removeClass("show").addClass("hide"), 
            !1;
        }), $("footer").waypoint(function(direction) {
            "down" === direction ? $(".floater.social").css({
                display: "none"
            }) : $(".floater.social").css({
                display: ""
            });
        }, {
            offset: $(window).height()
        });
    },
    getRootURL: function() {
        return -1 != window.location.href.indexOf(":8888") ? "http://llmac.local:8888/cata/" : "http://catapult.staging.wpengine.com/";
    },
    hideNews: function() {
        this.getDrawerDiv().removeClass("show peek hide").addClass("hide");
    },
    showNews: function() {
        this.getDrawerDiv().removeClass("hide peek show").addClass("show");
    },
    peekNews: function() {
        this.getDrawerDiv().removeClass("hide peek show").addClass("peek");
    },
    isHome: function() {
        var loc = "";
        return loc = -1 == window.location.href.indexOf("#") ? window.location.href : window.location.href.substring(0, window.location.href.indexOf("#")), 
        console.log(loc), loc == cataCommon.getRootURL();
    },
    handleNav: function(target) {
        for (var scrollPositions = [ {
            section: "#projects",
            offset: 1054
        }, {
            section: "#team",
            offset: 1755
        }, {
            section: "#contact",
            offset: 2847
        }, {
            section: "#donate",
            offset: 3400
        } ], scrollTop = 0, i = scrollPositions.length - 1; i >= 0; i--) scrollPositions[i].section == target && (scrollTop = scrollPositions[i].offset);
        cataCommon.isHome() === !0 ? window.location.hash = target : window.location.href = cataCommon.getRootURL() + target, 
        $("html, body").animate({
            scrollTop: scrollTop
        }, 500);
    },
    loadJobs: function() {
        var jobs = new ParsePostType();
        jobs.init(getRootURL() + "?json=get_recent_posts&dev=1&post_type=job", function() {
            console.log("Jobs have loaded");
        });
    },
    getDrawerDiv: function() {
        return $("#header-drawer");
    },
    handleHeader: function() {
        var self = this;
        this.getDrawerDiv().on("webkitTransitionEnd transitionend", function() {}), $("#header-center-tag").click(function(event) {
            return event.preventDefault(), self.getDrawerDiv().hasClass("show") ? self.hideNews(self.getDrawerDiv()) : self.showNews(self.getDrawerDiv()), 
            !1;
        });
    },
    handleSocial: function() {
        $(".social .social-button").hover(function() {
            $(this).find("span").addClass("hover");
        }, function() {
            $(this).find("span").removeClass("hover");
        });
    }
};